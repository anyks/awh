#!/usr/bin/env bash

# Получаем корневую дирректорию
readonly ROOT=$(cd "$(dirname "$0")" && pwd)

# Название библиотеки
readonly LIBNAME="dependence"

# Каталог статических библиотек
THIRD_PARTY="$ROOT/third_party/lib"

# Если на вход получен каталог с библиотеками
if [[ -d $1 ]]; then
	# Каталог статических библиотек
	THIRD_PARTY="$1"
fi

# Получаем версию OS
OS=$(uname -a | awk '{print $1}')

if [[ $OS =~ "MINGW64" ]]; then
	OS="Windows"
fi

##
# Функция упаковка модулей в библиотеку
#
intract(){
	# Расширение файла объекта
	OBJECT_NAME="o"

	# Если операционной системой является Windows
	if [ $2 = "Windows" ]; then
		# Расширение файла объекта
		OBJECT_NAME="obj"
	fi

	# Регулярное выражение поиска
	readonly REG=".*\.${OBJECT_NAME}$"

	# Производим пересборку всех зависимых библиотек
	for i in $(ls . | grep "$REG");
	do
		# Если операционной системой является Windows
		if [ $2 = "Windows" ]; then
			# Выполняем сборку новой статической библиотеки
			ar -crv "lib$1.a" "$i" || exit 1
		# Если операционной системой является Unix-подобная ОС
		else
			# Выполняем сборку новой статической библиотеки
			ar -cruv "lib$1.a" "$i" || exit 1
		fi
		# Выполняем удаление уже добавленный модуль
		rm "$i" || exit 1
	done

	# Выполняем запуск библиотеки
	ranlib "lib$1.a"

	# Если операционной системой является Unix-подобная ОС
	if [ ! $2 = "Windows" ]; then
		# Удаляем файл разметки
		rm -f "__.SYMDEF"
		rm -f "__.SYMDEF SORTED"
	fi
}

##
# Функция извлечения модулей из библиотеки
#
extract(){
	# Регулярное выражение поиска
	readonly REG1=".*\.$1$"
	# Регулярное выражение поиска
	readonly REG2=".*\.$2$"

	# Расширение файла объекта
	OBJECT_NAME="o"

	# Если операционной системой является Windows
	if [ $3 = "Windows" ]; then
		# Расширение файла объекта
		OBJECT_NAME="obj"
	fi

	# Производим пересборку всех зависимых библиотек
	for i in $(ls . | grep "$REG1");
	do
		# Индекс текущей библиотеки
		INDEX=0
		# Выводим сообщение
		echo "Extract \"$i\""
		# Выполняем формирование последовательности списка модулей
		for j in $(ar -t $i | grep "$REG2");
		do
			# Получаем название модуля
			MODULE=$j
			# Выводим название модуля
			echo "Module: $MODULE in $i"

			# Выполняем извлечение модуля из архива
			ar -xv $i "$MODULE"
			# Выполняем удаление модуля в архиве
			ar -dv $i "$MODULE"

			# Выполняем переименование модуля
			mv "${MODULE%.*}.$2" "${MODULE%.*}_$INDEX.$OBJECT_NAME"

			# Выполняем увеличение индекса
			INDEX=$((INDEX+1))
		done
		# Удалем архив статической библиотеки
		rm "$i" || exit 1
	done
}

# Выполняем переход в каталог статических библиотек
cd $THIRD_PARTY

# Если операционной системой является Windows
if [ $OS = "Windows" ]; then
	# Извлекаем все модули из библиотеки
	extract "a" "o" $OS
	extract "a" "obj" $OS
# Если операционной системой является Unix-подобная ОС
else
	# Извлекаем все модули из библиотеки
	extract "a" "o" $OS
fi

# Выполняем сборку библиотеки
intract $LIBNAME $OS

# Переходим обратно
cd "$ROOT" || exit 1

printf "\n****************************************"
printf "\n************   Success merge static libs!!!   ************"
printf "\n****************************************"
printf "\n\n\n"
